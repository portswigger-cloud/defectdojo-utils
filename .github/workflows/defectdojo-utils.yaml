name: defectdojo utils
on:
  push:
    branches:
      - main
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  semgrep-sast-scan:
    name: semgrep sast scan
    runs-on: ubuntu-latest
    container:
      image: returntocorp/semgrep
    if: (github.actor != 'dependabot[bot]')
    steps:
      - name: checkout
        id: checkout
        uses: actions/checkout@v3
      - name: semgrep scan
        id: semgrep-scan
        run: |
          mkdir -p semgrep/results
          semgrep --config auto --error --json --output=semgrep/results/semgrep.json
      - name: upload semgrep results
        id: upload-semgrep-results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: semgrep-results
          path: semgrep/results/

  pytest:
    name: test
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      checks: write
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
    steps:
      - name: checkout
        id: checkout
        uses: actions/checkout@v3
      - name: set-up-python ${{ matrix.python-version }}
        id: set-up-python
        uses: actions/setup-python@v4.5.0
        with:
          python-version: ${{ matrix.python-version }}
      - name: install python dependencies
        id: install-python-dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox tox-gh-actions
      - name: test
        run: |
          tox
      - name: publish pytest report
        id: publish-pytest-report
        if: always()
        uses: mikepenz/action-junit-report@v3
        with:
          report_paths: reports/unit-test-*.xml
          require_tests: true
      - name: publish pytest-cov report
        if: always()
        uses: orgoro/coverage@v3
        with:
          coverageFile: reports/*pytest-cov*
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: upload pytest-cov report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: pytest-cov-report
          path: reports/*pytest-cov*

  build-and-push-image:
    runs-on: ubuntu-latest
    needs:
      - semgrep-sast-scan
      - pytest
    permissions:
      contents: read
      packages: write
    steps:
      - name: checkout repository
        uses: actions/checkout@v3

      - name: log in to the container registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: extract metadata (tags, labels) for docker
        id: meta
        uses: docker/metadata-action@v4.3.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: build and push docker image
        uses: docker/build-push-action@v4.0.0
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}